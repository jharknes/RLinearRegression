source('C:/Users/joshu/Downloads/TCGA-Assembler-20170529T165157Z-001.zip', encoding = 'UTF-8')
source('C:/Users/joshu/Downloads/TCGA-Assembler-20170529T165157Z-001/TCGA-Assembler/Module_A.R', encoding = 'UTF-8')
memory.limit()
memory.size()
memory.limit(50000)
ColumnName1 <- strsplit(ReadIn, split = "\t")[[1]]
demo()
ColumnName1 <- strsplit(ReadIn, split = "\t")[[1]]
library(RCurl)
library(RCurl)
install.packages(c("tidyverse", "RSQLite"))
memory.limit(60000)
library(tidyverse)
library(data.table)
library(xlsx)
library(data.table)
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
memory.limit(60000)
library(tidyverse)
library(data.table)
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
memory.limit(60000)
library(tidyverse)
library(data.table)
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
clinical_data <- read.csv("data/BRCA.clin.merged.csv")
memory.limit(60000)
library(tidyverse)
library(data.table)
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
merged_data <- read.csv("data/BRCAMerged-NoClin.csv")
?read.csv()
q()
#Data Preprocessing
# no libraries need for this in R
dataset = read.csv('~/ISC215/python/dataInterpreter/Data.csv')
#correcting for missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age,
FUN = function(x)mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary,
FUN = function(x)mean(x,na.rm = TRUE)),
dataset$Salary)
#encode categorical data
dataset$City = factor(dataset$City,
levels = c('Syracuse','Oswego','Buffalo','Albany'),
labels = c('Syracuse','Oswego','Buffalo','Albany'))#labels = c(1,2,3,4))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c('Yes','No'))#labels = c(1,2,3,4))
#split dataset into training set and test set
#importing required library
##########install.packages('caTools')
###########library(caTools)              these two lines were needed until it was installed. It is now no longer required to be run
set.seed(123) #This is so we all get the same result
split = sample.split(dataset$Purchased,SplitRatio = .8) #Sets training to 80%
trainingset = subset(dataset,split == TRUE)
testset = subset(dataset,split == FALSE)
#feature scale ---- age is scaled differently than the salary
trainingset[,2:3] = scale(trainingset[,2:3])
testset[,2:3] = scale(testset[,2:3])
#Data Preprocessing
# no libraries need for this in R
dataset = read.csv('~/ISC215/python/dataInterpreter/Data.csv')
#correcting for missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age,
FUN = function(x)mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary,
FUN = function(x)mean(x,na.rm = TRUE)),
dataset$Salary)
#encode categorical data
dataset$City = factor(dataset$City,
levels = c('Syracuse','Oswego','Buffalo','Albany'),
labels = c('Syracuse','Oswego','Buffalo','Albany'))#labels = c(1,2,3,4))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c('Yes','No'))#labels = c(1,2,3,4))
#split dataset into training set and test set
#importing required library
##########install.packages('caTools')
library(caTools)              #these two lines were needed until it was installed. It is now no longer required to be run
set.seed(123) #This is so we all get the same result
split = sample.split(dataset$Purchased,SplitRatio = .8) #Sets training to 80%
trainingset = subset(dataset,split == TRUE)
testset = subset(dataset,split == FALSE)
#feature scale ---- age is scaled differently than the salary
trainingset[,2:3] = scale(trainingset[,2:3])
testset[,2:3] = scale(testset[,2:3])
#importing the dataset
dataset = read.csv('Salary_Data.csv')
#splitting the data into test and trainingset
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperienceInField, data = training_set)
#visualize the training results
#install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = training_set$YearsExperienceInField, y = training_set$Salary), colour = 'red')+
geom_line(aes(x = training_set$YearsExperienceInField, y = predict(regressor, newdata = training_set)), colour = 'blue')+
ggtitle('Salary vs Years Experience (Training Set)') + xlab('Years Experience') + ylab('Salary')
ggsave('trainingset.png')
#visualizing the test set results
setwd("~/ISC215/SimpleLinearRegression")
#importing the dataset
dataset = read.csv('Salary_Data.csv')
#splitting the data into test and trainingset
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperienceInField, data = training_set)
#visualize the training results
#install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = training_set$YearsExperienceInField, y = training_set$Salary), colour = 'red')+
geom_line(aes(x = training_set$YearsExperienceInField, y = predict(regressor, newdata = training_set)), colour = 'blue')+
ggtitle('Salary vs Years Experience (Training Set)') + xlab('Years Experience') + ylab('Salary')
ggsave('trainingset.png')
#visualizing the test set results
ggplot() + geom_point(aes(x = test_set$YearsExperienceInField, y = test_set$Salary),colour = 'red') +
geom_line(aes(x = training_set$YearsExperienceInField, y = predict(regressor, newdata = training_set)), colour = 'blue')+
ggtitle('Salary vs Years Experience (Test Set)') + xlab('Years Experience') + ylab('Salary')
